{"version":3,"sources":["utils/API.js","utils/EmployeeContext.js","components/Jumbotron/index.js","components/Search/index.js","components/TableHead/index.js","components/Employee/index.js","components/Table/index.js","components/Container/index.js","pages/Directory.js","App.js","index.js"],"names":["axios","get","EmployeeContext","React","createContext","filteredResults","Jumbotron","className","Search","props","onChange","handleInputChange","type","placeholder","TableHead","scope","onClick","handleClick","Employee","thisDOB","Date","dob","src","image","alt","name","phone","href","email","getMonth","getDate","getFullYear","Table","useContext","map","employee","key","cell","first","last","picture","medium","date","substring","Container","Directory","state","results","getEmployeeList","API","then","res","setState","data","catch","err","console","log","setUpSorter","a","b","nameA","toLowerCase","nameB","sorter","sortMeUp","sortMeDown","event","preventDefault","thisIsTheWay","startsWith","sort","currentSearch","target","value","filter","includes","this","Provider","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba4dd740.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  getTwoHundred: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=u\");\n  }\n};","import React from \"react\";\n\nconst EmployeeContext = React.createContext({\n    filteredResults: []\n});\n\nexport default EmployeeContext;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n    return(\n        <div className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Employee Directory</h1>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Search(props) {\n    return(\n        <div className=\"searchBoxHolder container-fluid\">\n            <div className=\"input-group input-group-sm mb-3\">\n                <input onChange={props.handleInputChange} type=\"text\" className=\"form-control\" placeholder=\"Search\"/>\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React from \"react\";\nimport \"./style.css\";\n\nfunction TableHead(props) {\n    return(\n        <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\">Name <button onClick={props.handleClick}>sortbylast</button></th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">DOB</th>\n        </tr>\n    );\n}\n\nexport default TableHead;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Employee(props) {\n    let thisDOB = new Date(props.dob);\n    return(\n        <tr className=\"tableRow\">\n            <th scope=\"row\"><img src={props.image} alt=\"employee's thumbnail\"></img></th>\n            <td>{props.name}</td>\n            <td>{props.phone}</td>\n            <td><a href=\"#\">{props.email}</a></td>\n            <td>{`${thisDOB.getMonth()+1}-${thisDOB.getDate()}-${thisDOB.getFullYear()}`}</td>\n        </tr>\n    );\n}\n\nexport default Employee;","import React, {useContext} from \"react\";\nimport TableHead from \"../TableHead\";\nimport Employee from \"../Employee\";\nimport EmployeeContext from \"../../utils/EmployeeContext\";\nimport \"./style.css\";\n\nfunction Table(props) {\n    const { filteredResults } = useContext(EmployeeContext);\n    return(\n        <div className=\"table-responsive-lg\">\n            <table className=\"table\">\n                <thead>\n                    <TableHead handleClick={props.handleClick}/>\n                </thead>\n                <tbody>\n                    {filteredResults.map(employee => (\n                        <Employee\n                        key={employee.cell}\n                        name={employee.name.first + \" \" + employee.name.last} \n                        image={employee.picture.medium} \n                        phone={employee.phone} \n                        email={employee.email} \n                        dob={employee.dob.date.substring(0,10)} />\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default Table;","import React from \"react\";\nimport Jumbotron from \"../Jumbotron\";\nimport Search from \"../Search\";\nimport Table from \"../Table\";\n\nfunction Container(props) {\n    return (\n        <div className=\"container-fluid\">\n            <Jumbotron />\n            <Search handleInputChange={props.handleInputChange} />\n            <Table handleClick={props.handleClick}/>\n        </div>\n    );\n}\n\nexport default Container;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport EmployeeContext from \"../utils/EmployeeContext\";\nimport Container from \"../components/Container\";\n\nclass Directory extends Component {\n    state = {\n        filteredResults: [],\n        results: []\n    }\n\n    componentDidMount() {\n        this.getEmployeeList();\n    }\n\n    getEmployeeList = () => {\n        API.getTwoHundred()\n        .then(res => \n            this.setState({filteredResults: res.data.results, results: res.data.results})\n        )\n        .catch(err => \n            console.log(err)\n        );\n    }\n\n    setUpSorter = (a, b) => {\n        const nameA = a.name.last.toLowerCase();\n        const nameB = b.name.last.toLowerCase();\n        let sorter = 0;\n        \n        if(nameA > nameB) {\n            sorter = 1;\n        } else if(nameA < nameB) {\n            sorter = -1;\n        }\n        return sorter;\n    }\n\n    sortMeUp = (a, b) => {\n        let sorter = this.setUpSorter(a, b);\n        sorter *= 1;\n        return sorter;\n    }\n\n    sortMeDown = (a, b) => {\n        let sorter = this.setUpSorter(a, b);\n        sorter *= -1;\n        return sorter;\n    }\n\n    handleClick = async event => {\n        event.preventDefault();\n\n        let thisIsTheWay = [];\n        if (this.state.filteredResults[0].name.last.startsWith(\"A\")){\n            thisIsTheWay = this.sortMeDown;\n        } else {\n            thisIsTheWay = this.sortMeUp;\n        }\n\n        await this.setState({filteredResults: this.state.results.sort(thisIsTheWay)});\n    }\n\n    handleInputChange = async event => {\n        event.preventDefault();\n        \n        let currentSearch = event.target.value;\n        await this.setState({\n            filteredResults: this.state.results.filter(employee => \n                employee.name.first.toLowerCase().includes(currentSearch.toLowerCase()) ||\n                employee.name.last.toLowerCase().includes(event.target.value.toLowerCase())\n            )\n        });\n    };\n\n    render() {\n        return (\n            <EmployeeContext.Provider value={this.state} >\n                <Container handleInputChange={this.handleInputChange} handleClick={this.handleClick} />\n            </EmployeeContext.Provider>\n        );\n    }\n}\n\nexport default Directory;","import React from \"react\";\nimport Directory from \"./pages/Directory\";\n\nfunction App() {\n    return (\n        <Directory />\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}